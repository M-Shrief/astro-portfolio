---
import { getCollection } from "astro:content";
// Layouts
import Layout from "../../layouts/MainLayout.astro";
// Utils
import {getAllClassifications, getClassificationsList} from '../../utils/blog'

const posts = (await getCollection("blog", ({data}) => {
  return import.meta.env.PROD ? data.isDraft !== true : true;
})).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf() 
);

const allCategories = await getClassificationsList("categories")
const allBlogsCategories = await getAllClassifications("categories") 
const allTags = await getClassificationsList("tags")
const allBlogsTags = await getAllClassifications("tags")

---

<Layout title="M. Shrief :: Blog" description="Blogs about Web development in the Backend and Frontend.">
  <main>
    <section >
      <h1>Blogs</h2>
        
        <h2>Tags</h2>
        {
          allTags.map((tag: any) => {
            const count = allBlogsTags.filter(
              (t: string) => t === tag
            ).length;
            return (
              <p>
              {tag}: {count}
              </p>
            );
          })
        }

        <h2>Categories</h2>
        {
          allCategories.map((category: any) => {
            const count = allBlogsCategories.filter(
              (c: string) => c === category
            ).length;
            return (
              <p>
              {category}: {count}
              </p>
            );
          })
        }

      <ul >
        {
          posts.map((post) => (
            <li class="blog">
              <a href={`/blog/${post.slug}/`}>
                <h4>{post.data.title}</h4>
              </a>
              <p>{post.data.description}</p>
              <span>{post.data.pubDate.toLocaleDateString().slice(0, 16)}</span>
            </li>
          ))
        }
      </ul>
    </section>
  </main>
</Layout>

<style lang="scss">
  @import "../../assets/mixins.scss";
  main {
    width: 80%;
    margin: 1rem auto;
    @include mQ($breakpoint-sm) {
      width: 95%;
      h1 {
        font-size: 1.4rem;
      }
    }
  }
  ul {
    .blog {
      position: relative;
      list-style: none;
      padding: 0.5rem 1rem;
      margin: 1rem auto;
      border-radius: 1rem;
      background-color: var(--surface1);
      @include mQ($breakpoint-sm) {
        padding: 0.2rem 0.5rem;
        margin: 0.5rem auto;
      }
      a {
        @include blog-link
      }
      p {
        text-decoration: none;
        color: var(--text2);
        padding-bottom: 0.2rem;
        &:hover {
          text-decoration: none;
        }
        @include mQ($breakpoint-sm) {
          font-size:0.8rem;
        }
      }
      span {
        color: var(--text1);
        position: absolute;
        bottom: 0.5rem;
        right: 1rem;
        @include mQ($breakpoint-sm) {
          bottom: 0.2rem;
          right: 0.5rem;
          font-size:0.6rem;
        }
      }
    }
  }
</style>

